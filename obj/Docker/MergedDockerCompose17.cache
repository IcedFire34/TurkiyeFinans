name: dockercompose18330145334936019749
services:
  mssql:
    container_name: mssql
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_ENCRYPT: Optional
      SA_PASSWORD: jQ/4276M0{Ol
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      turkiyefinansnet: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: mssqldata
        target: /var/opt/mssql
        volume: {}
  turkiyefinans:
    build:
      context: C:\Dosyalarim\Dosyalar\Projelerim\Web\TurkiyeFinans
      dockerfile: ././TurkiyeFinans/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: TurkiyeFinans
    container_name: turkiyefinansapp
    depends_on:
      mssql:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Server=mssql;Database=TurkiyeFinansDb;User=sa;Password=jQ/4276M0{Ol;TrustServerCertificate=True;
    image: turkiyefinans
    labels:
      com.microsoft.visual-studio.project-name: TurkiyeFinans
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/TurkiyeFinans.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      turkiyefinansnet: null
    ports:
      - mode: ingress
        target: 80
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\omarf\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\omarf\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\omarf\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\omarf\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\omarf\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  turkiyefinansnet:
    name: dockercompose18330145334936019749_turkiyefinansnet
    driver: bridge
volumes:
  mssqldata:
    name: dockercompose18330145334936019749_mssqldata